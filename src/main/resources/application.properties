# Packaging
# quarkus.package.type=fast-jar
quarkus.http.test-port=0
quarkus.devservices.enabled=true
quarkus.swagger-ui.always-include=true
quarkus.console.enabled=true

# # profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
# %container.quarkus.container-image.build=true
# %container.quarkus.container-image.push=true
# %container.quarkus.container-image.group=${USER}
# %decontainer.quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
# %container.quarkus.container-image.tag=1.0-SNAPSHOT
# # %container.quarkus.jib.jvm-entrypoint=/home/kogito/kogito-app-launch.sh
# # %container.quarkus.jib.base-jvm-image=quay.io/kiegroup/kogito-runtime-jvm:1.36
# # %container.quarkuss.jib.working-directory=/home/kogito/bin
# %container.quarkus.openshift.build-strategy=docker
# %container.quarkus.container-image.builder=openshift
# %container.quarkus.openshift.base-jvm-image=quay.io/kiegroup/kogito-runtime-jvm:1.36




quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.knative.name=mta-kogito-swf
quarkus.kubernetes.deployment-target=knative
quarkus.openshift.deploy=true
quarkus.container-image.group=mta-kogito-swf
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
# kogitoquarkus.container-image.tag=0.0.2
quarkus.container-image.builder=openshift
quarkus.openshift.build-strategy=docker

%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes
quarkus.keycloak.devservices.realm-path=quarkus-realm.json
